services:
  twitch-chat-listener:
    image: dotabod-twitch-chat-listener
    container_name: dotabod-twitch-chat-listener
    restart: on-failure
    build:
      context: twitch-chat-listener
      target: prod
      dockerfile: ../web/Dockerfile # Reusing same nodejs dockerfile
    hostname: twitch-chat-listener
    ports:
      - '5005:5005'
    environment:
      - NEW_RELIC_APP_NAME="twitch chat listener"
  twitch-eventsub-listener:
    image: dotabod-twitch-eventsub-listener
    container_name: dotabod-twitch-eventsub-listener
    restart: on-failure
    build:
      context: twitch-eventsub-listener
      target: prod
      dockerfile: ../web/Dockerfile # Reusing same nodejs dockerfile
    hostname: twitch-eventsub-listener
    ports:
      - '82:5010'
    environment:
      - NEW_RELIC_APP_NAME="twitch eventsub listener"
      - PORT=5010
  web:
    image: dotabod-web
    container_name: dotabod-web
    restart: on-failure
    build:
      context: web
      target: prod
    volumes:
      - steam_auth:/app/src/steam/volumes
    hostname: web
    ports:
      - '81:5000'
      - '9229:9229'
  nginx:
    container_name: dotabod-nginx
    image: dotabod-nginx
    restart: on-failure
    volumes:
    - ./nginx/default.conf:/etc/nginx/templates/default.conf.template
    build: ./nginx
    ports:
      - '80:80'
      - '443:443'

# Volumes are useful for data persistence, so the data will not be deleted
# even later you call command docker-compose down.
volumes:
  steam_auth: